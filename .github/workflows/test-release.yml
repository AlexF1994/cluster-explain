name: Test Release Pipeline

on:
  push:
    branches: [ "release" ]

env:
  PYTHON_VERSION: "3.8"
  POETRY_VERSION: "1.4.2"
  POETRY_URL: https://install.python-poetry.org

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
        id: setup_python

      - uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: install dependencies for docs
        run: |
          poetry install --with docs

      - name: build docs
        run: |
          cd docs
          make clean html
          make html

      - name: build package
        run: |
          poetry build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

  publish:
    runs-on: ubuntu-latest
    environment:
      name: test-release
      url: https://test.pypi.org/p/clusterxplain
    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution ðŸ“¦ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
